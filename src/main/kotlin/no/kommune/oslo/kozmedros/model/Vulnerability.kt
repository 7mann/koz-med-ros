package no.kommune.oslo.kozmedros.model

import no.kommune.oslo.kozmedros.model.enums.SeverityLevel
import no.kommune.oslo.kozmedros.model.enums.VulnerabilityType

/**
 * Vulnerability has an initial score. But as long it is not exploited or exploitable by threats,
 * it can be considered as dormant. A dormant vulnerability does not necessary be remedied,
 * but needs to be monitored for changes.
 * The initial score is decreased by risk treatments, and otherwise increased by threats
 * able to exploit the vulnerability.
 */
data class Vulnerability(
        val vulnerabilityType: VulnerabilityType,
        val vulnerabilityDescription: String,
        val vulnerabilityPotential: SeverityLevel,
        val reference: String,
        val threatName: String = "NO NAME",
        val exploitedByThreat: Threat = Threat.emptyThreat()
) : RiskItem {

    override fun getSeverityLevel(): SeverityLevel {
        return vulnerabilityPotential
    }
}

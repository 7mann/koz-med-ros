package no.kommune.oslo.model

import no.kommune.oslo.methodology.VulnerabilityScoreCalculation

/**
 * Vulnerability has an initial score. But as long it is not exploited or exploitable by threats,
 * it can be considered as dormant. A dormant vulnerability does not necessary be remedied,
 * but needs to bed monitored for changes.
 * The initial score is decreased by risk treatments, and otherwise increased by threats
 * able to exploit the vulnerability.
 * The algorithm to calculate exposed vulnerability score is injected to allow a calculation algorithm by choice.
 */
data class Vulnerability(
        val vulnerabilityType: VulnerabilityTypes,
        val vulnerabilityDescription: String,
        val vulnerabilityPotential: SeverityLevels,
        val exploitedByThreats: List<Threat>,
        val riskTreatments: List<RiskTreatment>,// This list will contain both existing and new mitigations
        val vulnerabilityScoreCalculation: VulnerabilityScoreCalculation) : RiskItem {

    override fun getSeverityLevel(): SeverityLevels {
        return vulnerabilityScoreCalculation.vulnerabilityScoreValue
    }

}
